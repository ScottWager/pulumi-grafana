// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    [Obsolete(@"grafana.index/getdatasource.getDataSource has been deprecated in favor of grafana.oss/getdatasource.getDataSource")]
    public static class GetDataSource
    {
        public static Task<GetDataSourceResult> InvokeAsync(GetDataSourceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataSourceResult>("grafana:index/getDataSource:getDataSource", args ?? new GetDataSourceArgs(), options.WithDefaults());

        public static Output<GetDataSourceResult> Invoke(GetDataSourceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceResult>("grafana:index/getDataSource:getDataSource", args ?? new GetDataSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataSourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        [Input("orgId")]
        public string? OrgId { get; set; }

        [Input("uid")]
        public string? Uid { get; set; }

        public GetDataSourceArgs()
        {
        }
        public static new GetDataSourceArgs Empty => new GetDataSourceArgs();
    }

    public sealed class GetDataSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("uid")]
        public Input<string>? Uid { get; set; }

        public GetDataSourceInvokeArgs()
        {
        }
        public static new GetDataSourceInvokeArgs Empty => new GetDataSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataSourceResult
    {
        public readonly string AccessMode;
        public readonly bool BasicAuthEnabled;
        public readonly string BasicAuthUsername;
        public readonly string DatabaseName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IsDefault;
        public readonly string JsonDataEncoded;
        public readonly string Name;
        public readonly string? OrgId;
        public readonly string Type;
        public readonly string Uid;
        public readonly string Url;
        public readonly string Username;

        [OutputConstructor]
        private GetDataSourceResult(
            string accessMode,

            bool basicAuthEnabled,

            string basicAuthUsername,

            string databaseName,

            string id,

            bool isDefault,

            string jsonDataEncoded,

            string name,

            string? orgId,

            string type,

            string uid,

            string url,

            string username)
        {
            AccessMode = accessMode;
            BasicAuthEnabled = basicAuthEnabled;
            BasicAuthUsername = basicAuthUsername;
            DatabaseName = databaseName;
            Id = id;
            IsDefault = isDefault;
            JsonDataEncoded = jsonDataEncoded;
            Name = name;
            OrgId = orgId;
            Type = type;
            Uid = uid;
            Url = url;
            Username = username;
        }
    }
}
