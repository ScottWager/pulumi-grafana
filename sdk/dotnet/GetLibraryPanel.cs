// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Grafana
{
    [Obsolete(@"grafana.index/getlibrarypanel.getLibraryPanel has been deprecated in favor of grafana.oss/getlibrarypanel.getLibraryPanel")]
    public static class GetLibraryPanel
    {
        public static Task<GetLibraryPanelResult> InvokeAsync(GetLibraryPanelArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLibraryPanelResult>("grafana:index/getLibraryPanel:getLibraryPanel", args ?? new GetLibraryPanelArgs(), options.WithDefaults());

        public static Output<GetLibraryPanelResult> Invoke(GetLibraryPanelInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLibraryPanelResult>("grafana:index/getLibraryPanel:getLibraryPanel", args ?? new GetLibraryPanelInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLibraryPanelArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        [Input("orgId")]
        public string? OrgId { get; set; }

        [Input("uid")]
        public string? Uid { get; set; }

        public GetLibraryPanelArgs()
        {
        }
        public static new GetLibraryPanelArgs Empty => new GetLibraryPanelArgs();
    }

    public sealed class GetLibraryPanelInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("orgId")]
        public Input<string>? OrgId { get; set; }

        [Input("uid")]
        public Input<string>? Uid { get; set; }

        public GetLibraryPanelInvokeArgs()
        {
        }
        public static new GetLibraryPanelInvokeArgs Empty => new GetLibraryPanelInvokeArgs();
    }


    [OutputType]
    public sealed class GetLibraryPanelResult
    {
        public readonly string Created;
        public readonly ImmutableArray<int> DashboardIds;
        public readonly string Description;
        public readonly string FolderName;
        public readonly string FolderUid;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ModelJson;
        public readonly string? Name;
        public readonly string? OrgId;
        public readonly int PanelId;
        public readonly string Type;
        public readonly string? Uid;
        public readonly string Updated;
        public readonly int Version;

        [OutputConstructor]
        private GetLibraryPanelResult(
            string created,

            ImmutableArray<int> dashboardIds,

            string description,

            string folderName,

            string folderUid,

            string id,

            string modelJson,

            string? name,

            string? orgId,

            int panelId,

            string type,

            string? uid,

            string updated,

            int version)
        {
            Created = created;
            DashboardIds = dashboardIds;
            Description = description;
            FolderName = folderName;
            FolderUid = folderUid;
            Id = id;
            ModelJson = modelJson;
            Name = name;
            OrgId = orgId;
            PanelId = panelId;
            Type = type;
            Uid = uid;
            Updated = updated;
            Version = version;
        }
    }
}
